{"version":3,"sources":["images/me.jpg","images/tastemakers.jpeg","images/tufts-sights.jpeg","images/grace-shopper.jpeg","images/tufts-logo.jpg","images/city-kids.png","images/dumbo.png","images/washington-square.jpeg","components/Header.js","components/Projects.js","components/About.js","components/Connect.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","me","alt","onClick","displayAbout","displayProjects","displayConnect","Projects","data-aos","href","rel","target","tastemakers","size","color","graceShopper","tuftsSights","About","data-offset","cityKids","dumbo","washingtonSquare","Connect","MainPage","state","bind","scrollToBottom","this","setState","animateScroll","containerId","React","Component","App","AOS","init","offset","duration","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be7a77a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.a4d305f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tastemakers.c35ba00d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tufts-sights.52b3ecab.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/grace-shopper.3908ee16.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tufts-logo.6d1cf760.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city-kids.4d9dfedd.png\";","module.exports = __webpack_public_path__ + \"static/media/dumbo.346bdba5.png\";","module.exports = __webpack_public_path__ + \"static/media/washington-square.f409637c.jpeg\";","import React from 'react';\nimport { me } from '../images/';\n\nconst Header = (props) => {\n  return (\n    <div className=\"App-header\">\n      <img src={me} className=\"App-logo\" alt=\"me\" />\n      <h1 className = \"nameTitle\">mikayla toffler</h1>\n      <h3 className = \"jobTitle\">full stack software engineer</h3>\n      <div className=\"links\">\n        <button onClick={props.displayAbout}>about</button>\n        <button onClick={props.displayProjects}>projects</button>\n        <button onClick={props.displayConnect}>connect</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport {tastemakers, tuftsSights, graceShopper} from '../images/'\nimport { FaAngleDoubleRight } from 'react-icons/fa';\n\nconst Projects = () => {\n  return(\n    <div className=\"Section Project\">\n      <div className=\"project-image-wrapper\" data-aos=\"fade-up\">\n        <a href=\"https://github.com/tastemakers-node-feratu/capstone1\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <img src={tastemakers} className=\"Project-img\" alt=\"tastemakers\" />\n        </a>\n        <div>\n          <h2>TasteMakers</h2>\n          <p className=\"project-description\">Tastemakers is a mobile social media\n            application for sharing image-driven experiences with your friends. As a fullstack developer on this group project, I worked across the stack with a particular focus on building out functionality for the user profile, creating a new post and the explore page. My team used the Node.js Sentiment machine learning model in order to detect positive engagement with particular posts and preferentially render similar content on the user's explore page.\n          </p>\n          <a href=\"https://github.com/tastemakers-node-feratu/capstone1\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <FaAngleDoubleRight size={50} className=\"viewBtn\" color=\"#ffe6e6\"/>\n          </a>\n        </div>\n      </div>\n      <div className=\"project-image-wrapper\" data-aos=\"fade-up\">\n        <a href=\"https://grace-shopper-great-gatsby.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <img src={graceShopper} className=\"Project-img\" alt=\"grace shopper\" />\n        </a>\n        <div>\n          <h2>Lux Ducks</h2>\n          <p className=\"project-description\">Lux Ducks is an E-Commerce site for purchasing fancy rubber ducks. As a fullstack developer on this project, I worked across the React/Redux/Express/Node.js/SQL stack with a focus on the cart functionality. I also lead the team on schema design.\n          </p>\n          <a href=\"https://grace-shopper-great-gatsby.herokuapp.com/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <FaAngleDoubleRight size={50} className=\"viewBtn\" color=\"#ffe6e6\"/>\n          </a>\n        </div>\n      </div>\n      <div className=\"project-image-wrapper\" data-aos=\"fade-up\">\n        <a href=\"https://github.com/tuftsdev/comp20-s2019-team7\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <img src={tuftsSights} className=\"Project-img\" alt=\"tufts sights\" />\n        </a>\n        <div>\n          <h2>Tufts Sights</h2>\n          <p className=\"project-description\">Tufts Sights allows users to take a virtual tour of Tufts campus in one of seven different languages. For the on-campus user, the application will automatically update its geolocation as the user walks around. For the offsite user, one can freely click around the pinned sights to learn more about campus landmarks. My team of four used HTML/CSS/Javascript/Express/Node.js/MongoDB alongside google maps API to build this application.</p>\n          <a href=\"https://github.com/tuftsdev/comp20-s2019-team7\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <FaAngleDoubleRight size={50} className=\"viewBtn\" color=\"#ffe6e6\"/>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Projects;\n","import React from 'react';\nimport {cityKids, dumbo, washingtonSquare} from '../images/'\n\nconst About = (props) => {\n  return(\n    <div className=\"Section About\" data-aos=\"fade-up\" data-offset=\"100\">\n      <h2>\n          NYC NATIVE AND TUFTS UNIVERSITY GRADUATE\n      </h2>\n      <div className=\"About-imgs\">\n        <img src={cityKids} alt=\"City Kids\"/>\n        <img src={dumbo} alt=\"Dumbo\"/>\n        <img src={washingtonSquare} alt=\"Washington Square Park\"/>\n      </div>\n      <div className=\"About-content\">\n        <p>\n          I discovered my passion for software engineering in college at Tufts University, almost by accident, when I ended up in “Introduction To Computer Science” as a requirement for my “Cognitive and Brain Sciences” major. I quickly realized it was the class I enjoyed best. In my senior year, I explored personal interests in Artificial Intelligence and Web Programming, the latter of which I particularly loved.\n        </p>\n        <p>\n          After graduating in May 2019 with a computer science minor, I taught web development for Girls Who Code and Kode With Klossy. It was exciting to watch my young-woman pupils grasping the power of technology.\n        </p>\n        <p>\n          After the summer ended, I enrolled in Grace Hopper Fullstack Academy. My experience at GHFSA further solidified my passion for writing code and watching it come to life. I look forward to harnessing my technical and social skills further to make a difference in real world problems with creative technology solutions.\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react';\nimport { FaGithub, FaLinkedin, FaMedium } from 'react-icons/fa';\n\nconst Connect = (props) => {\n  return(\n    <div className=\"Section Icons\">\n      <a href=\"https://github.com/mtoffl01\" rel=\"noopener noreferrer\" target=\"_blank\">\n        <FaGithub size={50} className=\"connect-icons\" color=\"#ffe6e6\"/>\n      </a>\n      <a href=\"https://www.linkedin.com/in/mikayla-toffler/\" rel=\"noopener noreferrer\" target=\"_blank\">\n        <FaLinkedin size={50} className=\"connect-icons\" color=\"#ffe6e6\"/>\n      </a>\n      <a href=\"https://medium.com/@tofflerm\" rel=\"noopener noreferrer\" target=\"_blank\">\n        <FaMedium size={50} className=\"connect-icons\" color=\"#ffe6e6\"/>\n      </a>\n    </div>\n  )\n}\n\nexport default Connect;\n","import React from 'react';\nimport '../App.css';\nimport Header from './Header'\nimport Projects from './Projects'\nimport { animateScroll } from \"react-scroll\";\nimport About from './About'\nimport Connect from './Connect'\n\nclass MainPage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      displayAbout: true,\n      displayProjects: false,\n      displayConnect: false\n    }\n    this.displayAbout = this.displayAbout.bind(this);\n    this.displayProjects = this.displayProjects.bind(this);\n    this.displayConnect = this.displayConnect.bind(this);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n  }\n  displayAbout(){\n    this.setState({\n      displayAbout: true,\n      displayProjects: false,\n      displayConnect: false\n    })\n  }\n  displayProjects(){\n    this.setState({\n      displayAbout: false,\n      displayProjects: true,\n      displayConnect: false\n    });\n  }\n  displayConnect(){\n    this.setState({\n      displayAbout: false,\n      displayProjects: false,\n      displayConnect: true\n    }, this.scrollToBottom)\n  }\n  scrollToBottom() {\n    animateScroll.scrollToBottom({\n      containerId: \"Section\"\n    });\n  }\n  render(){\n    return(\n      <div>\n        <Header displayAbout={this.displayAbout} displayProjects={this.displayProjects} displayConnect={this.displayConnect}/>\n          { this.state.displayProjects && (<Projects />) }\n          { this.state.displayAbout && (<About />)}\n          { this.state.displayConnect && (<Connect />)}\n      </div>\n    )\n  }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport MainPage from './components/MainPage.js';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n// import Linker from './Linker.js'\n\nfunction App() {\n  AOS.init({\n    offset: 250,\n    duration: 800\n  });\n  return (\n      <div className=\"App\">\n        <MainPage />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Projects from './components/Projects'\n\nReactDOM.render(\n  <Router>\n    {/* <React.StrictMode> */}\n      <Route exact path='/'>\n        <App />\n      </Route>\n      <Route path=\"/projects\" component={Projects}/>\n    {/* </React.StrictMode> */}\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}